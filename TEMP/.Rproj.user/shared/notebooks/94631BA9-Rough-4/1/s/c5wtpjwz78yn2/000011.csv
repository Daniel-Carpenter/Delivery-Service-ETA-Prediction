"0",""
"0","# # We are going to factor collapse factor columns with more than 4 columns"
"0","# # So there will be 5 of the original, and 1 containing 'other'"
"0","# # This is the threshold"
"0","# factorThreshold = 5"
"0","# "
"0","# # Get a list of the factors we are going to collapse"
"0","# colsWithManyFactors <- rownames(factorCols %>% filter(V1 > factorThreshold))"
"0","# "
"0","# # Show a summary of how many factors will be collapsed"
"0","# numberOfColsWithManyFactors = length(colsWithManyFactors)"
"0","# paste('Before cleaning, there are', numberOfColsWithManyFactors, 'factor columns with more than', "
"0","#       factorThreshold, 'unique values')"
"0","# "
"0","# # Collapse the affected factors in the original data (the one that already has imputation)"
"0","# ## for each factor column that we are about to collapse"
"0","# # The third column is omits the cutstomer ID and session ID"
"0","# FIRST_NON_CUST_SESSION_IDX = 3"
"0","# for (collapsedColNum in FIRST_NON_CUST_SESSION_IDX:numberOfColsWithManyFactors) {"
"0","#   "
"0","#   # The name of the column with null values"
"0","#   nameOfThisColumn <- colsWithManyFactors[collapsedColNum]"
"0","#   "
"0","#   # Get the actual data of the column with nulls"
"0","#   colWithManyFactors <- df.train[, nameOfThisColumn]"
"0","#   "
"0","#   # lumps all levels except for the n most frequent "
"0","#   df.train.clean[, nameOfThisColumn] <- fct_lump_n(colWithManyFactors, "
"0","#                                                    n=factorThreshold)"
"0","# }"
"0","# Check to see if the factor lumping worked"
"0","#factorColsCleaned <- "
"0","  t(df.train.clean %>%"
"0","                       select_if(is.factor) %>%"
"0","                       summarise_all(n_distinct))"
"1","                              "
"1","  [,1]"
"1","
custId                        "
"1"," 46967"
"1","
sessionId                     "
"1"," 69753"
"1","
channelGrouping               "
"1","     8"
"1","
browser                       "
"1","    24"
"1","
operatingSystem               "
"1","    15"
"1","
deviceCategory                "
"1","     3"
"1","
continent                     "
"1","     6"
"1","
subContinent                  "
"1","    23"
"1","
country                       "
"1","   171"
"1","
region                        "
"1","   310"
"1","
metro                         "
"1","    73"
"1","
city                          "
"1","   478"
"1","
networkDomain                 "
"1","  5012"
"1","
topLevelDomain                "
"1","   184"
"1","
campaign                      "
"1","     8"
"1","
source                        "
"1","   131"
"1","
medium                        "
"1","     6"
"1","
keyword                       "
"1","   386"
"1","
isTrueDirect                  "
"1","     2"
"1","
referralPath                  "
"1","   385"
"1","
adContent                     "
"1","    30"
"1","
adwordsClickInfo.page         "
"1","     9"
"1","
adwordsClickInfo.slot         "
"1","     6"
"1","
adwordsClickInfo.gclId        "
"1","  1409"
"1","
adwordsClickInfo.adNetworkType"
"1","     5"
"1","
adwordsClickInfo.isVideoAd    "
"1","     5"
"1","
bounces                       "
"1","     2"
"1","
newVisits                     "
"1","     2"
"1","
"
"0","# # paste('After cleaning, there are', sum(factorColsCleaned > factorThreshold + 1, na.rm = TRUE), "
"0","# #       ""columns with more than"", factorThreshold + 1, ""unique values (omitting NA's)"") "
